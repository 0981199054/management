<template>
  <div>
    <div class="title">
      <div class='del'>
        <el-button type="primary" @click="del">删除</el-button>
      </div>
      <div class='select'>
        <el-select v-model="value" @change="inputChange" placeholder="请选择">
          <el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value">
          </el-option>
        </el-select>
      </div>
      <div>
        <el-input v-model="inputValue" />
      </div>
      <div>
        <el-button type="primary" icon="el-icon-search" @click="search"></el-button>
        <el-button type="primary" @click="back">返回</el-button>
      </div>
    </div>
    <div>
      <el-table height="700px" :data="data" tooltip-effect="dark" style="width: 100%" @selection-change="handleSelectionChange">
        <el-table-column align='center' type="selection" width="55">
        </el-table-column>
        <el-table-column align='center' prop="name" label="店铺名称" width="200">
        </el-table-column>
        <el-table-column align='center' prop="site" label="店铺地址" width="200">
        </el-table-column>
        <el-table-column align='center' prop="phone" label="联系方式" width="120">
        </el-table-column>
        <el-table-column align='center' prop="LV" label="店铺等级" width="120">
        </el-table-column>
        <el-table-column align='center' prop="type" label="经营范围" width="120">
        </el-table-column>
        <el-table-column align='center' prop="shop.length" label="店铺商品总数" width="120">
        </el-table-column>
        <el-table-column align='center' prop="indent.length" label="店铺订单总数" width="120">
        </el-table-column>
        <el-table-column align='center' prop="people.length" label="关注人数" width="120">
        </el-table-column>
        <el-table-column label="操作">
          <template slot-scope="scope">
            <el-button type='primary' @click="amend">修改</el-button>
          </template>
        </el-table-column>
      </el-table>
      <el-pagination :current-page="page" layout="prev, pager, next" @current-change='change' :total="this.total">
      </el-pagination>
    </div>
    <el-dialog v-if="multipleSelection.length>0" title="修改内容" :visible.sync="centerDialogVisible" width="30%" center>
      <p>
        <span>店铺名称: </span>
        <el-input class='amend' v-model="multipleSelection[0].name" />
      </p>
      <p>
        <span>店铺地址: </span>
        <el-input class='amend' v-model="multipleSelection[0].site" />
      </p>
      <p>
        <span>联系方式: </span>
        <el-input class='amend' v-model="multipleSelection[0].phone" />
      </p>
      <p>
        <span>店铺等级: </span>
        <el-input class='amend' v-model="multipleSelection[0].LV" />
      </p>
      <p>
        <span>经营范围: </span>
        <el-input class='amend' v-model="multipleSelection[0].type" />
      </p>
      <p slot="footer" class="dialog-footer">
        <el-button @click="centerDialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="amendUpdata">确 定</el-button>
      </p>
    </el-dialog>
  </div>
</template>

<script>
import axios from 'axios'
let ip = 'http://127.0.0.1:3333/permission'
export default {
  data () {
    return {
      data: [],
      multipleSelection: [],
      rows: 10,
      page: 1,
      total: 1,
      centerDialogVisible: false,
      inputValue: '',
      options: [
        {
          value: 'name',
          label: '店铺名称'
        },
        {
          value: 'site',
          label: '店铺地址'
        },
        {
          value: 'phone',
          label: '联系方式'
        },
        {
          value: 'LV',
          label: '店铺等级'
        },
        {
          value: 'type',
          label: '经营范围'
        },
        {
          value: 'shop',
          label: '商品总数'
        },
        {
          value: 'indent',
          label: '订单总数'
        }
      ],
      value: ''
    }
  },
  created () {
    axios.post(ip + '/inf', { page: this.page, rows: this.rows }).then(msg => {
      this.data = msg.data.rows
      this.total = msg.data.total
    })
    console.log(this.$store.state.login)
  },
  methods: {
    toggleSelection (rows) {
      if (rows) {
        rows.forEach(row => {
          this.$refs.multipleTable.toggleRowSelection(row)
        })
      } else {
        this.$refs.multipleTable.clearSelection()
      }
    },
    handleSelectionChange (val) {
      if (val.length !== 0) {
        this.multipleSelection = val
      } else {
        this.multipleSelection = []
      }
    },
    // -------------------------删除功能-----------------------//
    // 删除数据
    del () {
      if (this.multipleSelection.length === 0) {
        this.$message({
          type: 'error',
          message: '请选择需要删除的数据'
        })
      } else {
        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {
          cancelButtonText: '取消',
          confirmButtonText: '确定',
          type: 'warning'
        })
          .then(() => {
            axios
              .post(ip + '/delshop', {
                ids: this.multipleSelection.map(item => item._id)
              })
              .then(msg => {
                console.log(msg)
                this.$message({
                  type: 'success',
                  message: '删除成功!'
                })
                this.page = 1
                axios
                  .post(ip + '/inf', { page: this.page, rows: this.rows })
                  .then(msg => {
                    this.data = msg.data.rows
                    this.total = msg.data.total
                  })
              })
          })
          .catch(() => {
            this.$message({
              type: 'info',
              message: '已取消删除'
            })
          })
      }
    },
    // 修改按钮
    amend () {
      if (this.multipleSelection.length === 0) {
        this.$message({
          type: 'error',
          message: '请选择一条数据进行修改'
        })
      } else {
        this.centerDialogVisible = true
      }
    },
    // 修改数据提交
    amendUpdata () {
      let param = { ...this.multipleSelection[0] }
      console.log(param)
      axios.post(ip + '/updata', param).then(msg => {
        this.centerDialogVisible = false
      })
    },
    // 换页
    change (val) {
      this.page = val
      if (this.options.value) {
        let param = {}
        param[this.options.value] = this.inputValue
        axios
          .post(ip + '/nop', { ...param, page: this.page, rows: this.rows })
          .then(msg => {
            this.data = msg.data.rows
            this.total = msg.data.total
          })
      } else {
        axios
          .post(ip + '/nop', { page: this.page, rows: this.rows })
          .then(msg => {
            this.data = msg.data.rows
            this.total = msg.data.total
          })
      }
    },
    // ---------------------查询功能--------------------//
    // 选项输入
    inputChange (val) {
      this.options.value = val
    },
    // 搜索按钮
    search () {
      if (this.options.value) {
        let param = {}
        param[this.options.value] = this.inputValue
        this.page = 1
        axios
          .post(ip + '/inf', { ...param, page: this.page, rows: this.rows })
          .then(msg => {
            this.data = msg.data.rows
            this.total = msg.data.total
          })
      } else {
        this.$message({
          type: 'error',
          message: '请选择查询类型'
        })
      }
    },
    // 返回
    back () {
      this.page = 1
      this.inputValue = ''
      axios
        .post(ip + '/inf', { page: this.page, rows: this.rows })
        .then(msg => {
          this.data = msg.data.rows
          this.total = msg.data.total
        })
    }
  }
}
</script>

<style scoped>
.amend {
  width: 80%;
  margin-top: 10px;
}
.title {
  display: flex;
}
.select {
  width: 120px;
  margin-left: 10px;
}
.del {
  margin-left: 10px;
}
.el-button--primary {
background-color: #ff5777;
border: none;
}
.el-pager li.active {
color: #ff5777;
}
.el-pager li:hover{
color: #ff5777;
}
.el-pagination button:hover{
color: #ff5777;
}
.el-button--primary:hover{
background-color: #ff5777;
}
</style>
