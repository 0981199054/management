<template>
  <div>
    <el-button @click="pushBtn" type="primary">店铺消息推送</el-button>
    <el-button @click="AllBtn" type="primary">全体用户消息推送</el-button>
    <el-dialog title="推送消息" :visible.sync="dialogVisible" width="30%" :before-close="handleClose">
      <el-input v-model="input" :rows="4" type="textarea" ></el-input><br>
      <span slot="footer" class="dialog-footer">
        <el-button @click="isdel">取 消</el-button>
        <el-button type="primary" @click="isok">确 定</el-button>
      </span>
    </el-dialog>
    <el-dialog title="全体用户消息推送" :visible.sync="allpeople" width="30%" :before-close="handleClose">
      <el-input v-model="allInput"  :rows="4"  type="textarea" ></el-input><br>
      <el-input v-model="time" class="input" ></el-input><br>
      <span slot="footer" class="dialog-footer">
        <el-button @click="alldel">取 消</el-button>
        <el-button type="primary" @click="allOk">确 定</el-button>
      </span>
    </el-dialog>
    <div>
      <el-table height="700px" :data="data" tooltip-effect="dark" style="width: 100%" @selection-change="handleSelectionChange">
        <el-table-column align='center' type="selection" width="55">
        </el-table-column>
        <el-table-column align='center' prop="name" label="店铺名称" width="200">
        </el-table-column>
        <el-table-column align='center' prop="site" label="店铺地址" width="200">
        </el-table-column>
        <el-table-column align='center' prop="phone" label="联系方式" width="120">
        </el-table-column>
        <el-table-column align='center' prop="LV" label="店铺等级" width="120">
        </el-table-column>
        <el-table-column align='center' prop="type" label="经营范围" width="120">
        </el-table-column>
        <el-table-column align='center' prop="shop.length" label="店铺商品总数" width="120">
        </el-table-column>
        <el-table-column align='center' prop="indent.length" label="店铺订单总数" width="120">
        </el-table-column>
        <el-table-column align='center' prop="people.length" label="关注人数" width="120">
        </el-table-column>
      </el-table>
      <el-pagination :current-page="page" layout="prev, pager, next" @current-change='change' :total="this.total">
      </el-pagination>
    </div>
  </div>
</template>

<script>
import axios from 'axios'
let ip = 'http://127.0.0.1:3333/permission'
export default {
  data () {
    return {
      data: [],
      dialogVisible: false,
      allpeople: false,
      multipleSelection: [],
      input: '',
      allInput: '',
      text: [],
      rows: 10,
      page: 1,
      total: 1,
      time: ''
    }
  },
  created () {
    axios.post(ip + '/inf', { page: this.page, rows: this.rows }).then(msg => {
      this.data = msg.data.rows
      this.total = msg.data.total
    })
  },
  methods: {
    handleSelectionChange (val) {
      this.multipleSelection = val
    },
    pushBtn () {
      if (this.multipleSelection.length === 0) {
        this.$message({
          message: '警告,推送数据不能为空',
          type: 'error'
        })
      } else {
        this.dialogVisible = true
      }
    },
    AllBtn () {
      this.allpeople = true
      var now = new Date()
      var year = now.getFullYear() // 得到年份
      var month = now.getMonth() + 1 // 得到月份
      var date = now.getDate() // 得到日期
      var hour = now.getHours() // 得到小时
      var minu = now.getMinutes() // 得到分钟
      var sec = now.getSeconds() // 得到秒
      var newdata = year + '-' + month + '-' + date + ' ' + hour + ':' + minu + ':' + sec
      this.time = newdata
    },
    // 商品消息推送
    isok () {
      axios.post(ip + '/pushNews', { text: this.input }).then(msg => {
        this.dialogVisible = false
        this.value = ''
        this.multipleSelection.map(item => {
          item.News.push(msg.data)
        })
        this.multipleSelection.map(item => {
          axios.post(ip + '/storeUp', { _id: item._id, News: item.News }).then(msg => {})
        })
        this.$message({
          message: '消息推送成功',
          type: 'success'
        })
      })
    },
    // 用户商品推送
    allOk () {
      axios.post(ip + '/pushNews', { text: this.allInput, time: this.time }).then(msg => {
        this.allpeople = false
        this.allInput = ''
        axios.post(ip + '/storeFn', {}).then(item => {
          item.data.map(i => {
            i.pushtext.push(msg.data)
          })
          item.data.map(i => {
            axios.post(ip + '/storeUp', { _id: i._id, pushtext: i.pushtext }).then(msg => {})
          })
          this.$message({
            message: '消息推送成功',
            type: 'success'
          })
        })
      })
    },
    isdel () {
      this.dialogVisible = false
      this.input = ''
    },
    alldel () {
      this.allpeople = false
      this.allInput = ''
    },
    handleClose (done) {
      done()
      this.allInput = ''
      this.input = ''
    },
    // 换页
    change (val) {
      this.page = val
      if (this.options.value) {
        let param = {}
        param[this.options.value] = this.inputValue
        axios
          .post(ip + '/inf', { ...param, page: this.page, rows: this.rows })
          .then(msg => {
            this.data = msg.data.rows
            this.total = msg.data.total
          })
      } else {
        axios
          .post(ip + '/inf', { page: this.page, rows: this.rows })
          .then(msg => {
            this.data = msg.data.rows
            this.total = msg.data.total
          })
      }
    }
  }
}
</script>

<style scoped>
.input{
  margin-top: 10px
}
</style>
